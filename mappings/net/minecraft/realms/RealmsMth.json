{
  "obf": "RealmsMth",
  "name": "net/minecraft/realms/RealmsMth",
  "field": [],
  "constructors": [],
  "method": [
    {
      "obf": "abs",
      "name": "abs",
      "signature": "(F)F",
      "args": []
    },
    {
      "obf": "abs",
      "name": "abs",
      "signature": "(I)I",
      "args": []
    },
    {
      "obf": "absFloor",
      "name": "absFloor",
      "signature": "(D)I",
      "args": []
    },
    {
      "obf": "absMax",
      "name": "absMax",
      "signature": "(DD)D",
      "args": []
    },
    {
      "obf": "average",
      "name": "average",
      "signature": "([J)D",
      "args": []
    },
    {
      "obf": "ceil",
      "name": "ceil",
      "signature": "(D)I",
      "args": []
    },
    {
      "obf": "ceil",
      "name": "ceil",
      "signature": "(F)I",
      "args": []
    },
    {
      "obf": "clamp",
      "name": "clamp",
      "signature": "(DDD)D",
      "args": []
    },
    {
      "obf": "clamp",
      "name": "clamp",
      "signature": "(FFF)F",
      "args": []
    },
    {
      "obf": "clamp",
      "name": "clamp",
      "signature": "(III)I",
      "args": []
    },
    {
      "obf": "clampedLerp",
      "name": "clampedLerp",
      "signature": "(DDD)D",
      "args": []
    },
    {
      "obf": "cos",
      "name": "cos",
      "signature": "(F)F",
      "args": []
    },
    {
      "obf": "fastFloor",
      "name": "fastFloor",
      "signature": "(D)I",
      "args": []
    },
    {
      "obf": "floor",
      "name": "floor",
      "signature": "(D)I",
      "args": []
    },
    {
      "obf": "floor",
      "name": "floor",
      "signature": "(F)I",
      "args": []
    },
    {
      "obf": "getDouble",
      "name": "getDouble",
      "signature": "(Ljava/lang/String;D)D",
      "args": []
    },
    {
      "obf": "getDouble",
      "name": "getDouble",
      "signature": "(Ljava/lang/String;DD)D",
      "args": []
    },
    {
      "obf": "getInt",
      "name": "getInt",
      "signature": "(Ljava/lang/String;I)I",
      "args": []
    },
    {
      "obf": "getInt",
      "name": "getInt",
      "signature": "(Ljava/lang/String;II)I",
      "args": []
    },
    {
      "obf": "intFloorDiv",
      "name": "intFloorDiv",
      "signature": "(II)I",
      "args": []
    },
    {
      "obf": "isEmpty",
      "name": "isEmpty",
      "signature": "(Ljava/lang/String;)Z",
      "args": []
    },
    {
      "obf": "lfloor",
      "name": "lfloor",
      "signature": "(D)J",
      "args": []
    },
    {
      "obf": "log2",
      "name": "log2",
      "signature": "(I)I",
      "args": []
    },
    {
      "obf": "nextDouble",
      "name": "nextDouble",
      "signature": "(Ljava/util/Random;DD)D",
      "args": []
    },
    {
      "obf": "nextFloat",
      "name": "nextFloat",
      "signature": "(Ljava/util/Random;FF)F",
      "args": []
    },
    {
      "obf": "nextInt",
      "name": "nextInt",
      "signature": "(Ljava/util/Random;II)I",
      "args": []
    },
    {
      "obf": "roundUp",
      "name": "roundUp",
      "signature": "(II)I",
      "args": []
    },
    {
      "obf": "sin",
      "name": "sin",
      "signature": "(F)F",
      "args": []
    },
    {
      "obf": "smallestEncompassingPowerOfTwo",
      "name": "smallestEncompassingPowerOfTwo",
      "signature": "(I)I",
      "args": []
    },
    {
      "obf": "sqrt",
      "name": "sqrt",
      "signature": "(D)F",
      "args": []
    },
    {
      "obf": "sqrt",
      "name": "sqrt",
      "signature": "(F)F",
      "args": []
    },
    {
      "obf": "wrapDegrees",
      "name": "wrapDegrees",
      "signature": "(D)D",
      "args": []
    },
    {
      "obf": "wrapDegrees",
      "name": "wrapDegrees",
      "signature": "(F)F",
      "args": []
    }
  ],
  "innerClass": []
}