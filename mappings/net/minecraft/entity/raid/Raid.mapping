CLASS awq net/minecraft/entity/raid/Raid
	CLASS awq$b Member
		FIELD a VINDICATOR Lawq$b;
		FIELD b EVOKER Lawq$b;
		FIELD c PILLAGER Lawq$b;
		FIELD d WITCH Lawq$b;
		FIELD e RAVAGER Lawq$b;
		FIELD g type Laid;
		FIELD h firstWave [I
	FIELD a ILLAGER_BANNER Lbbp;
	FIELD g waveToLeader Ljava/util/Map;
	FIELD h waveToRaiders Ljava/util/Map;
	FIELD j ticksActive J
	FIELD k center Lev;
	FIELD l world Lve;
	FIELD m started Z
	FIELD n id I
	FIELD o totalHealth F
	FIELD p badOmenLevel I
	FIELD q active Z
	FIELD r wavesSpawned I
	FIELD s bar Lvb;
	FIELD t postRaidTicks I
	FIELD u preRaidTicks I
	FIELD v random Ljava/util/Random;
	METHOD <init> (ILve;Lev;)V
		ARG 1 id
	METHOD E removeObsoleteRaiders ()V
	METHOD F canSpawnRaiders ()Z
	METHOD G markDirty ()V
	METHOD H getIllagerBanner ()Lbbp;
	METHOD a isOnGoing ()Z
	METHOD a setRaidLeader (ILawr;)V
		ARG 1 wave
	METHOD a addRaider (ILawr;Lev;Z)V
		ARG 1 wave
		ARG 2 raider
		ARG 3 pos
		ARG 4 existing
	METHOD a addToWave (ILawr;Z)Z
		ARG 1 wave
		ARG 3 countHealth
	METHOD a start (Lavm;)V
	METHOD a removeFromWave (Lawr;Z)V
		ARG 2 countHealth
	METHOD a playRaidHorn (Lev;)V
	METHOD a toTag (Lib;)Lib;
	METHOD b getLeader (I)Lawr;
	METHOD b addToWave (ILawr;)Z
		ARG 1 wave
	METHOD b spawnNextWave (Lev;)V
	METHOD c removeLeader (I)V
		ARG 1 wave
	METHOD d getPillagerSpawnLocation (I)Lev;
	METHOD i getWorld ()Lbgv;
	METHOD k hasStarted ()Z
	METHOD l getGroupsSpawned ()I
	METHOD m getMaxAcceptableBadOmenLevel ()I
	METHOD n getBadOmenLevel ()I
	METHOD o invalidate ()V
	METHOD p tick ()V
	METHOD q updateBar ()V
	METHOD r getCurrentRaiderHealth ()F
	METHOD s getRaiderCount ()I
	METHOD t getCenter ()Lev;
	METHOD u getRaidId ()I
	METHOD v isActive ()Z
	METHOD x isInRaidDistance ()Ljava/util/function/Predicate;
	METHOD y updateBarToPlayers ()V
	METHOD z hasSpawnedAllGroups ()Z
