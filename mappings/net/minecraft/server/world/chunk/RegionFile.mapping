CLASS net/minecraft/class_407 net/minecraft/server/world/chunk/RegionFile
	FIELD field_1618 BLOCK_BUFFER [B
	FIELD field_1619 file Ljava/io/File;
	FIELD field_1620 randomAccessFile Ljava/io/RandomAccessFile;
	FIELD field_1621 chunkBlockInfo [I
		COMMENT Contains the block offset and number of blocks that each chunk occupies. If
		COMMENT a chunk does not store any data, then the array entry contains zero. The format
		COMMENT of a non-empty entry in the array is as follows:
		COMMENT <ul>
		COMMENT     <li>bits[0:7] , the number of blocks that the chunk data occupies</li>
		COMMENT     <li>bits[8:31], the block offset of the first byte in the chunk data</li>
		COMMENT </ul>
		COMMENT The above is specified in lsb first. This array is also written to the region
		COMMENT file starting at byte 0.
	FIELD field_1622 saveTimes [I
		COMMENT Contains the times for the latest modification to each chunk. This array
		COMMENT is also written to the region file starting at byte 4096.
	FIELD field_1624 bytesWritten I
		COMMENT The total number of bytes written to the region file, since this {@code RegionFile}
		COMMENT object was instantiated. Note that this is always a multiple of 4096 (the size
		COMMENT of a single block).
	FIELD field_1625 lastModifiedTime J
	FIELD field_9606 blockEmptyFlags Ljava/util/ArrayList;
		COMMENT A list containing flags for each of the blocks in the file indicating whether
		COMMENT it should be considered empty or occupied. In particular, if a value at index
		COMMENT {@code blockOffset} is {@code true} then it is empty, and otherwise occupied.
	METHOD <init> (Ljava/io/File;)V
		ARG 1 file
	METHOD method_1447 getChunkInputStream (II)Ljava/io/DataInputStream;
		ARG 1 chunkX
		ARG 2 chunkZ
	METHOD method_1448 writeChunkBlockInfo (III)V
		COMMENT Writes the given chunk block info to the region file. See {@link #chunkBlockInfo}
		COMMENT for information about the format of the block info.
		COMMENT
		COMMENT @param chunkX the x-coordinate of the chunk inside the region
		COMMENT @param chunkY the y-coordinate of the chunk inside the region
		COMMENT @param blockInfo the block info for the specified chunk
		ARG 1 chunkX
		ARG 2 chunkZ
		ARG 3 blockInfo
	METHOD method_1449 writeChunkData (II[BI)V
		COMMENT Writes the chunk data at the given coordinates to the region file. Any
		COMMENT previous chunk data at the same coordinates will be discarded.
		COMMENT
		COMMENT @param chunkX the x-coordinate of the chunk inside the region
		COMMENT @param chunkY the y-coordinate of the chunk inside the region
		COMMENT @param data the chunk data
		COMMENT @param size the number of bytes in {@code data} that should be written
		ARG 1 chunkX
		ARG 2 chunkZ
		ARG 3 data
		ARG 4 size
	METHOD method_1450 writeChunkData (I[BI)V
		COMMENT Writes the given chunk data to the specified block offset.
		COMMENT
		COMMENT @param blockOffset the offset of the first 4KB block where the chunk data
		COMMENT                    should be written.
		COMMENT @param data the chunk data
		COMMENT @param size the number of bytes that should be written
		ARG 1 blockOffset
		ARG 2 data
		ARG 3 size
	METHOD method_1451 getChunkOutputStream (II)Ljava/io/DataOutputStream;
		ARG 1 chunkX
		ARG 2 chunkZ
	METHOD method_1452 writeSaveTime (III)V
		COMMENT Writes the given save time to the region file.
		COMMENT
		COMMENT @param chunkX the x-coordinate of the chunk inside the region
		COMMENT @param chunkY the y-coordinate of the chunk inside the region
		COMMENT @param timeSeconds the time in seconds since midnight, January 1, 1970 UTC
		ARG 1 chunkX
		ARG 2 chunkZ
		ARG 3 timeSeconds
	METHOD method_1453 close ()V
	METHOD method_1454 hasChunkData (II)Z
		COMMENT @param chunkX the x-coordinate of the chunk inside the region
		COMMENT @param chunkY the y-coordinate of the chunk inside the region
		COMMENT
		COMMENT @return True, if this region file contains chunk data for the specified
		COMMENT         coordinates, false otherwise.
		ARG 1 chunkX
		ARG 2 chunkZ
	METHOD method_1455 isOutsideRegion (II)Z
		ARG 1 chunkX
		ARG 2 chunkZ
	METHOD method_1456 getChunkBlockInfo (II)I
		COMMENT @param chunkX the x-coordinate of the chunk inside the region
		COMMENT @param chunkY the y-coordinate of the chunk inside the region
		COMMENT
		COMMENT @return The chunk block info for the chunk at the specified location. See
		COMMENT         {@link #chunkBlockInfo} for information about the format of the
		COMMENT         block info.
		ARG 1 chunkX
		ARG 2 chunkZ
